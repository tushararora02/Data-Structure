class Node:
    
    def __init__(self,data):
        self.data=data
        self.prev=None
        self.next=None
        
class DoubleLinked:
    
    def __init__(self):
        self.head=None
    
    def push(self,data):
        
        NewNode=Node(data)
        if self.head is None:
            self.head=NewNode
        else:
            NewNode.next=self.head
            self.head.prev=NewNode
            self.head=NewNode
    def printlist(self,node):
        
        while(node is not None):
            print(node.data)
            last=node
            node=node.next
    
    def append(self,data):
        
        NewNode=Node(data)
        NewNode.next=None
        if self.head is None:
            NewNode.prev=None
            self.head=NewNode
            return
        last=self.head
        while(last.next):
            last=last.next
        last.next=NewNode
        NewNode.prev=last
        return 
    def insert(self,prev_node,data):
        
        NewNode=Node(data)
        
        if prev_node is None:
            return 
        NewNode.next=prev_node.next
        prev_node.next=NewNode
        NewNode.prev=prev_node
        if NewNode.next is not None:
            NewNode.next.prev=NewNode
            
    def remove(self,data):
        
        head=self.head
        
        if(head.data==data):
            
            self.head=head.next
            head.next.prev=None
            head=None
            return 
        while(head is not None):
            if(head.data==data):
                break
            prev=head
            head=head.next
        if  head.next is None:
            prev.next=None
            head=None
        else:
            prev.next=head.next
            head.next.prev=prev
            head=None
        
        if head is None:
            return 
        
list1=DoubleLinked()
list1.head=Node(20)
n1=Node(12)
n2=Node(23)
list1.head.next=n1
n1.next=n2
list1.push(33)
list1.append(98)
list1.remove(98)
list1.insert(list1.head.next, 13)
list1.printlist(list1.head)